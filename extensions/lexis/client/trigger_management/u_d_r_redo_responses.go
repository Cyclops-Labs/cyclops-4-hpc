// Code generated by go-swagger; DO NOT EDIT.

package trigger_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Cyclops-Labs/cyclops-4-hpc.git/extensions/lexis/models"
)

// UDRRedoReader is a Reader for the UDRRedo structure.
type UDRRedoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UDRRedoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUDRRedoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUDRRedoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUDRRedoOK creates a UDRRedoOK with default headers values
func NewUDRRedoOK() *UDRRedoOK {
	return &UDRRedoOK{}
}

/*UDRRedoOK handles this case with default header values.

Generation task executed successfully.
*/
type UDRRedoOK struct {
	Payload *models.ItemCreatedResponse
}

func (o *UDRRedoOK) Error() string {
	return fmt.Sprintf("[GET /trigger/udrsredo][%d] uDRRedoOK  %+v", 200, o.Payload)
}

func (o *UDRRedoOK) GetPayload() *models.ItemCreatedResponse {
	return o.Payload
}

func (o *UDRRedoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemCreatedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUDRRedoInternalServerError creates a UDRRedoInternalServerError with default headers values
func NewUDRRedoInternalServerError() *UDRRedoInternalServerError {
	return &UDRRedoInternalServerError{}
}

/*UDRRedoInternalServerError handles this case with default header values.

Something unexpected happend, error raised
*/
type UDRRedoInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *UDRRedoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /trigger/udrsredo][%d] uDRRedoInternalServerError  %+v", 500, o.Payload)
}

func (o *UDRRedoInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UDRRedoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
